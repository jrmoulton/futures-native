name: Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  check:
    name: Check, Format, Clippy, and Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable, nightly]
        # Reduce combinations for efficiency
        exclude:
          - os: windows-latest
            rust: nightly
          - os: ubuntu-latest  
            rust: nightly
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install Rust ${{ matrix.rust }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy
      
      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-${{ matrix.rust }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.rust }}-cargo-
            ${{ runner.os }}-cargo-
      
      - name: Check formatting (nightly only)
        if: matrix.rust == 'nightly'
        run: cargo +nightly fmt --all -- --check
      
      - name: Check compilation
        run: cargo check --workspace --all-targets
      
      - name: Run clippy
        run: cargo clippy --workspace --all-targets --all-features -- -D warnings
      
      - name: Run tests
        run: cargo test --workspace --all-features
      
      - name: Run examples (Linux only for speed)
        if: matrix.os == 'ubuntu-latest' && matrix.rust == 'stable'
        run: |
          cd time-native
          cargo run --example ticker_example
          cargo run --example stream_usage
          cargo run --example module_usage
          cargo run --example advanced_stream

  # Minimal smoke test for quick feedback
  quick-check:
    name: Quick Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      
      - name: Quick compile check
        run: cargo check --workspace
      
      - name: Quick clippy check  
        run: cargo clippy --workspace -- -D warnings
      
      - name: Quick test run
        run: cargo test --workspace